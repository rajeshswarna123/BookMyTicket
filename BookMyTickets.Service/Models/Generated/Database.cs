




















// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `BookMyTicketConnectionString`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `data source=RAJESH-PC;initial catalog=BookMyTicket;integrated security=True;MultipleActiveResultSets=True;`
//     Schema:                 ``
//     Include Views:          `False`



using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace BookMyTicketConnectionString
{

    public partial class BookMyTicketConnectionStringDB : Database
    {
        public BookMyTicketConnectionStringDB()
            : base("BookMyTicketConnectionString")
        {
            CommonConstruct();
        }

        public BookMyTicketConnectionStringDB(string connectionStringName)
            : base(connectionStringName)
        {
            CommonConstruct();
        }

        partial void CommonConstruct();

        public interface IFactory
        {
            BookMyTicketConnectionStringDB GetInstance();
        }

        public static IFactory Factory { get; set; }
        public static BookMyTicketConnectionStringDB GetInstance()
        {
            if (_instance != null)
                return _instance;

            if (Factory != null)
                return Factory.GetInstance();
            else
                return new BookMyTicketConnectionStringDB();
        }

        [ThreadStatic] static BookMyTicketConnectionStringDB _instance;

        public override void OnBeginTransaction()
        {
            if (_instance == null)
                _instance = this;
        }

        public override void OnEndTransaction()
        {
            if (_instance == this)
                _instance = null;
        }


        public class Record<T> where T : new()
        {
            public static BookMyTicketConnectionStringDB repo { get { return BookMyTicketConnectionStringDB.GetInstance(); } }
            public bool IsNew() { return repo.IsNew(this); }
            public object Insert() { return repo.Insert(this); }

            public void Save() { repo.Save(this); }
            public int Update() { return repo.Update(this); }

            public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
            public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
            public static int Update(Sql sql) { return repo.Update<T>(sql); }
            public int Delete() { return repo.Delete(this); }
            public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
            public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
            public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
            public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
            public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
            public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
            public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
            public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
            public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
            public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
            public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
            public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
            public static T Single(Sql sql) { return repo.Single<T>(sql); }
            public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
            public static T First(Sql sql) { return repo.First<T>(sql); }
            public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
            public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
            public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
            public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
            public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
            public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
            public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
            public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
            public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
            public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }

        }

    }






    [TableName("dbo.movie")]



    [PrimaryKey("ID")]




    [ExplicitColumns]

    public partial class movie : BookMyTicketConnectionStringDB.Record<movie>
    {



        [Column] public int ID { get; set; }





        [Column] public string Title { get; set; }





        [Column] public string Language { get; set; }





        [Column] public int Duration_Minutes { get; set; }



    }



    [TableName("dbo.seat_cost")]



    [PrimaryKey("ID")]




    [ExplicitColumns]

    public partial class seat_cost : BookMyTicketConnectionStringDB.Record<seat_cost>
    {



        [Column] public int ID { get; set; }





        [Column] public int theater_id { get; set; }





        [Column] public int price { get; set; }





        [Column] public int seats_in_row { get; set; }





        [Column] public int total_rows { get; set; }



    }



    [TableName("dbo.seat_reservation")]



    [PrimaryKey("ID")]




    [ExplicitColumns]

    public partial class seat_reservation : BookMyTicketConnectionStringDB.Record<seat_reservation>
    {



        [Column] public int ID { get; set; }





        [Column] public string seat_number { get; set; }





        [Column] public int ticket_id { get; set; }



    }



    [TableName("dbo.show")]



    [PrimaryKey("ID")]




    [ExplicitColumns]

    public partial class show : BookMyTicketConnectionStringDB.Record<show>
    {



        [Column] public int ID { get; set; }





        [Column] public DateTime show_time { get; set; }



    }



    [TableName("dbo.theater")]



    [PrimaryKey("ID")]




    [ExplicitColumns]

    public partial class theater : BookMyTicketConnectionStringDB.Record<theater>
    {



        [Column] public int ID { get; set; }





        [Column] public string Name { get; set; }



    }



    [TableName("dbo.theater_movie")]



    [PrimaryKey("ID")]




    [ExplicitColumns]

    public partial class theater_movie : BookMyTicketConnectionStringDB.Record<theater_movie>
    {



        [Column] public int ID { get; set; }





        [Column] public int theater_id { get; set; }





        [Column] public int movie_id { get; set; }





        [Column] public bool isLive { get; set; }



    }



    [TableName("dbo.theater_show_time")]



    [PrimaryKey("ID")]




    [ExplicitColumns]

    public partial class theater_show_time : BookMyTicketConnectionStringDB.Record<theater_show_time>
    {



        [Column] public int ID { get; set; }





        [Column] public int theater_movie_id { get; set; }





        [Column] public int show_id { get; set; }





        [Column] public DateTime start_date { get; set; }





        [Column] public DateTime end_date { get; set; }



    }



    [TableName("dbo.ticket")]



    [PrimaryKey("ID")]




    [ExplicitColumns]

    public partial class ticket : BookMyTicketConnectionStringDB.Record<ticket>
    {



        [Column] public int ID { get; set; }





        [Column] public int theater_movie_id { get; set; }





        [Column] public DateTime date_of_booking { get; set; }





        [Column] public int show_id { get; set; }





        [Column] public int seat_cost { get; set; }





        [Column] public int seats_count { get; set; }





        [Column] public int total_amount { get; set; }



    }

    public partial class show_details : BookMyTicketConnectionStringDB.Record<show_details>
    {
        [Column] public int theater_movie_id { get; set; }

        [Column] public DateTime date_of_booking { get; set; }

        [Column] public int show_id { get; set; }
    }

    public partial class theater_movie_seat_cost : BookMyTicketConnectionStringDB.Record<theater_movie_seat_cost>
    {

        [Column] public int ID { get; set; }


        [Column] public int price { get; set; }


        [Column] public int seats_in_row { get; set; }


        [Column] public int total_rows { get; set; }

    }

    public partial class theater_movie_theater : BookMyTicketConnectionStringDB.Record<theater_movie_theater>
    {

        [Column] public int ID { get; set; }


        [Column] public string Name { get; set; }

    }

    public partial class theater_movie_theater_movie : BookMyTicketConnectionStringDB.Record<theater_movie_theater_movie>
    {
        [Column] public int ID { get; set; }


        [Column] public string Name { get; set; }


        [Column] public string Title { get; set; }

    }

    public partial class theater_show_time_show : BookMyTicketConnectionStringDB.Record<theater_show_time_show>
    {

        [Column] public int ID { get; set; }

        [Column] public DateTime show_time { get; set; }

        [Column] public DateTime start_date { get; set; }

        [Column] public DateTime end_date { get; set; }

    }

    public partial class ticket_seat_reservation : BookMyTicketConnectionStringDB.Record<ticket_seat_reservation>
    {
        public DateTime date_of_booking { get; set; }

        public int theater_movie_id { get; set; }

        public int show_id { get; set; }

        public int seat_cost { get; set; }

        public int seats_count { get; set; }

        public int total_amount { get; set; }

        public List<string> seats { get; set; }
    }
}
